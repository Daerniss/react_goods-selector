{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","renderList","list","className","map","item","isSelected","includes","buttonText","classNames","type","onClick","toggleListItem","renderTitle","h1Text","length","reduce","text","listItem","i","arr","selected","setState","filter","clearList","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,aAAc,CAAC,Q,EAGjBC,WAAa,SAACC,GAAD,OACX,oBAAIC,UAAU,OAAd,SACGD,EAAKE,KAAI,SAAAC,GACR,IAAMC,EAAa,EAAKP,MAAMC,aAAaO,SAASF,GAC9CG,EAAaF,EAAa,SAAW,MAE3C,OACE,qBAEEH,UAAWM,IACT,aACA,CACE,uBAAwBH,IAL9B,UASGD,EACD,wBACEF,UAAU,YACVO,KAAK,SACLC,QAAS,kBAAM,EAAKC,eAAeN,EAAYD,IAHjD,SAKGG,MAdEH,S,EAsBfQ,YAAc,WACZ,IAAQb,EAAiB,EAAKD,MAAtBC,aACJc,EAAS,GAwBb,OAtB4B,IAAxBd,EAAae,SACfD,EAAM,UAAMd,EAAa,GAAnB,kBAGJA,EAAae,OAAS,IACxBD,EAASd,EAAagB,QAAO,SAACC,EAAMC,EAAUC,EAAGC,GAC/C,OAAU,IAAND,EACKD,EAAWD,EAGhBE,IAAMC,EAAIL,OAAS,EACf,GAAN,OAAUE,EAAV,gBAAsBC,EAAtB,iBAGI,GAAN,OAAUD,EAAV,aAAmBC,KAClB,KAGAlB,EAAae,SAChBD,EAAS,qBAGJA,G,EAGTF,eAAiB,SAACS,EAAmBhB,GAC9BgB,EAOH,EAAKC,UAAS,YAAuB,IAApBtB,EAAmB,EAAnBA,aACf,MAAO,CACLA,aAAc,YAAIA,GAAcuB,QAAO,SAAAJ,GAAC,OAAIA,IAAMd,SARtD,EAAKiB,UAAS,YAAuB,IAApBtB,EAAmB,EAAnBA,aACf,MAAO,CACLA,aAAa,GAAD,mBAAMA,GAAN,CAAoBK,S,EAYxCmB,UAAY,WACV,EAAKF,SAAS,CAAEtB,aAAc,M,4CAGhC,WACE,IAAQA,EAAiByB,KAAK1B,MAAtBC,aAER,OACE,sBAAKG,UAAU,MAAf,UACGH,EAAae,OACZ,wBACEL,KAAK,SACLC,QAASc,KAAKD,UAFhB,eAME,GAEJ,6BAAKC,KAAKZ,gBAEThB,EAAgBkB,QAAUU,KAAKxB,WAAWJ,U,GApGjC6B,IAAMC,WA0GT7B,IC7Hf8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.895e0e13.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGood: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: ['Jam'],\n  };\n\n  renderList = (list: string[]) => (\n    <ul className=\"list\">\n      {list.map(item => {\n        const isSelected = this.state.selectedGood.includes(item);\n        const buttonText = isSelected ? 'Remove' : 'Add';\n\n        return (\n          <li\n            key={item}\n            className={classNames(\n              'list__item',\n              {\n                'list__item--selected': isSelected,\n              },\n            )}\n          >\n            {item}\n            <button\n              className=\"list__btn\"\n              type=\"button\"\n              onClick={() => this.toggleListItem(isSelected, item)}\n            >\n              {buttonText}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n  renderTitle = (): string => {\n    const { selectedGood } = this.state;\n    let h1Text = '';\n\n    if (selectedGood.length === 1) {\n      h1Text = `${selectedGood[0]} is selected.`;\n    }\n\n    if (selectedGood.length > 1) {\n      h1Text = selectedGood.reduce((text, listItem, i, arr) => {\n        if (i === 0) {\n          return listItem + text;\n        }\n\n        if (i === arr.length - 1) {\n          return `${text} and ${listItem} are selected`;\n        }\n\n        return `${text}, ${listItem}`;\n      }, '');\n    }\n\n    if (!selectedGood.length) {\n      h1Text = 'No goods selected';\n    }\n\n    return h1Text;\n  };\n\n  toggleListItem = (selected: boolean, item: string) => {\n    if (!selected) {\n      this.setState(({ selectedGood }) => {\n        return {\n          selectedGood: [...selectedGood, item],\n        };\n      });\n    } else {\n      this.setState(({ selectedGood }) => {\n        return {\n          selectedGood: [...selectedGood].filter(i => i !== item),\n        };\n      });\n    }\n  };\n\n  clearList = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        {selectedGood.length ? (\n          <button\n            type=\"button\"\n            onClick={this.clearList}\n          >\n            X\n          </button>\n        ) : ''}\n\n        <h1>{this.renderTitle()}</h1>\n\n        {goodsFromServer.length && this.renderList(goodsFromServer)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}